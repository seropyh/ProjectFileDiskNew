server.port=8081

#spring.datasource.url=jdbc:postgresql://127.0.0.1:7777/disk
spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/disk
spring.datasource.username=postgres
#spring.datasource.password=212121
spring.datasource.password=root527
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.generate-ddl=true


# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)

# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Defaults to "create-drop" when using an embedded database and no schema manager was detected. Otherwise, defaults to "none".
spring.jpa.hibernate.ddl-auto=update
# Whether to enable logging of SQL statements.
spring.jpa.show-sql=false

# Hibernate additional native properties to set on the JPA provider.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.properties.hibernate.current_session_context_class=thread
spring.jpa.properties.hibernate.format_sql=true

# Fix Postgres JPA Error (Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented).
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true   
hibernate.jdbc.lob.non_contextual_creation = true 

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=5GB
# Max Request Size
spring.servlet.multipart.max-request-size=5GB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads